@import "variables";
@import "color-pallete";
@import "../../../bower_components/bootstrap/less/mixins.less";


// ............................................................
// .Loop through each color variable in the provided array and create applicable button css for the color
.button-constructor(@colorArray, @i: 1) when (@i <= length(@colorArray)) {
    //Variable name
    @name: e(extract(@colorArray, @i));

    @color: @white;
    @background: @@name;
    @border: darken(spin(@background, -10), 5%);

    .btn-@{name} {
        .button-variant(@color, @background, @border);
        text-shadow: 0 -1px 0 rgba(0,0,0,.2);
        @shadow: inset 0 1px 0 rgba(255,255,255,.15), 0 1px 1px rgba(0,0,0,.075);
        .box-shadow(@shadow);

        // Reset the shadow
        &:active,
        &.active {
            .box-shadow(inset 0 3px 5px rgba(0,0,0,.125));
        }

        .badge {
            text-shadow: none;
        }

        #gradient > .vertical(@start-color: @background; @end-color: darken(@background, 12%));
        .reset-filter(); // Disable gradients for IE9 because filter bleeds through rounded corners
        background-repeat: repeat-x;
        border-color: darken(@background, 14%);

        &:hover,
        &:focus  {
            background-color: darken(@background, 12%);
            background-position: 0 -15px;
        }

        &:active,
        &.active {
            background-color: darken(@background, 12%);
            border-color: darken(@background, 14%);
        }

        &:disabled,
        &[disabled] {
            background-color: darken(@background, 12%);
            background-image: none;
        }
    }

    //Loop
    .button-constructor(@colorArray, (@i + 1));
}


/* Create addition color options for Bootstrap Buttons */
.button-constructor(@base-palette);
.button-constructor(@metro-palette);
.button-constructor(@material-palette);
